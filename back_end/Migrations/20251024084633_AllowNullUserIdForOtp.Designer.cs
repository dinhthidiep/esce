// <auto-generated />
using System;
using ESCE_SYSTEM.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ESCE_SYSTEM.Migrations
{
    [DbContext(typeof(ESCEContext))]
    [Migration("20251024084633_AllowNullUserIdForOtp")]
    partial class AllowNullUserIdForOtp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ESCE_SYSTEM.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AVATAR");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("GENDER");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("PASSWORD_HASH");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("PASSWORD_SALT");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("PHONE");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__ACCOUNTS__161CF724757E8893")
                        .IsUnique();

                    b.ToTable("ACCOUNTS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.AgencieCertificate", b =>
                {
                    b.Property<int>("AgencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgencyId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Companyname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("COMPANYNAME");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseFile")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RejectComment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ReviewComments")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('pending')");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AgencyId")
                        .HasName("PK__AGENCIE___95C546DB5FDFFD15");

                    b.HasIndex("AccountId");

                    b.ToTable("AGENCIE_CERTIFICATES", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("BOOKING_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ComboId")
                        .HasColumnType("int")
                        .HasColumnName("COMBO_ID");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("END_DATE");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NOTES");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("QUANTITY");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("START_DATE");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("('pending')");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL_AMOUNT");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("UserId");

                    b.ToTable("BOOKINGS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.BookingCoupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AppliedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("APPLIED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BOOKING_ID");

                    b.Property<int>("CouponId")
                        .HasColumnType("int")
                        .HasColumnName("COUPON_ID");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex(new[] { "BookingId", "CouponId" }, "UQ_BookingPromotion")
                        .IsUnique();

                    b.ToTable("BOOKING_COUPONS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AUTHOR_ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("IMAGE");

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("int")
                        .HasColumnName("PARENT_COMMENT_ID");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("POST_ID");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostId");

                    b.ToTable("COMMENTS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DISCOUNT_AMOUNT");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("DISCOUNT_PERCENT");

                    b.Property<int>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("HOST_ID");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("ServicecomboId")
                        .HasColumnType("int")
                        .HasColumnName("SERVICECOMBO_ID");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UsageCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USAGE_COUNT")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("UsageLimit")
                        .HasColumnType("int")
                        .HasColumnName("USAGE_LIMIT");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.HasIndex("ServicecomboId");

                    b.HasIndex(new[] { "Code" }, "UQ__COUPONS__AA1D4379B4900E43")
                        .IsUnique();

                    b.ToTable("COUPONS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.HostCertificate", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"), 1L, 1);

                    b.Property<string>("BusinessLicenseFile")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RejectComment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ReviewComments")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('pending')");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CertificateId")
                        .HasName("PK__HOST_CER__BBF8A7C1722F012C");

                    b.HasIndex("HostId");

                    b.ToTable("HOST_CERTIFICATES", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_READ")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("RECEIVER_ID");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("SENDER_ID");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("MESSAGES", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NewsTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SocialMediaLink")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("NewsId");

                    b.HasIndex("AccountId");

                    b.ToTable("NEWS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_READ")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MESSAGE");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NOTIFICATIONS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Otp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CODE");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime")
                        .HasColumnName("EXPIRATION_TIME");

                    b.Property<bool?>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IS_VERIFIED")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OTP", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AMOUNT");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BOOKING_ID");

                    b.Property<string>("Method")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("METHOD");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("PAYMENT_DATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("('pending')");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("PAYMENTS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AUTHOR_ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("IMAGE");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("POSTS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ReactionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("REACTION_TYPE");

                    b.Property<int>("TargetId")
                        .HasColumnType("int")
                        .HasColumnName("TARGET_ID");

                    b.Property<string>("TargetType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TARGET_TYPE");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("REACTIONS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.RequestSupport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ComboId")
                        .HasColumnType("int")
                        .HasColumnName("COMBO_ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IMAGE");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("('Pending')");

                    b.Property<string>("SupportType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SUPPORT_TYPE");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("UserId");

                    b.ToTable("REQUEST_SUPPORTS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AUTHOR_ID");

                    b.Property<int>("ComboId")
                        .HasColumnType("int")
                        .HasColumnName("COMBO_ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentReviewId")
                        .HasColumnType("int")
                        .HasColumnName("PARENT_REVIEW_ID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("RATING");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ComboId");

                    b.ToTable("REVIEWS", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__ROLES__D9C1FA000635C206")
                        .IsUnique();

                    b.ToTable("ROLES", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("HOST_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRICE");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("SERVICE", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Servicecombo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<int>("AvailableSlots")
                        .HasColumnType("int")
                        .HasColumnName("AVAILABLE_SLOTS");

                    b.Property<string>("CancellationPolicy")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CANCELLATION_POLICY");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("HOST_ID");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IMAGE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRICE");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("('open')");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("SERVICECOMBO", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.ServicecomboDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QUANTITY")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("SERVICE_ID");

                    b.Property<int>("ServicecomboId")
                        .HasColumnType("int")
                        .HasColumnName("SERVICECOMBO_ID");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServicecomboId");

                    b.ToTable("SERVICECOMBO_DETAIL", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.SupportResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IMAGE");

                    b.Property<int>("ResponderId")
                        .HasColumnType("int")
                        .HasColumnName("RESPONDER_ID");

                    b.Property<int>("SupportId")
                        .HasColumnType("int")
                        .HasColumnName("SUPPORT_ID");

                    b.HasKey("Id");

                    b.HasIndex("ResponderId");

                    b.HasIndex("SupportId");

                    b.ToTable("SUPPORT_RESPONSES", (string)null);
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Account", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__ACCOUNTS__ROLE_I__2B3F6F97");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.AgencieCertificate", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Account")
                        .WithMany("AgencieCertificates")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__AGENCIE_C__Accou__3B75D760");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Booking", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Servicecombo", "Combo")
                        .WithMany("Bookings")
                        .HasForeignKey("ComboId")
                        .IsRequired()
                        .HasConstraintName("FK__BOOKINGS__COMBO___59FA5E80");

                    b.HasOne("ESCE_SYSTEM.Models.Account", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__BOOKINGS__USER_I__59063A47");

                    b.Navigation("Combo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.BookingCoupon", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Booking", "Booking")
                        .WithMany("BookingCoupons")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__BOOKING_C__BOOKI__5EBF139D");

                    b.HasOne("ESCE_SYSTEM.Models.Coupon", "Coupon")
                        .WithMany("BookingCoupons")
                        .HasForeignKey("CouponId")
                        .IsRequired()
                        .HasConstraintName("FK__BOOKING_C__COUPO__5FB337D6");

                    b.Navigation("Booking");

                    b.Navigation("Coupon");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Comment", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__COMMENTS__AUTHOR__787EE5A0");

                    b.HasOne("ESCE_SYSTEM.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__COMMENTS__POST_I__778AC167");

                    b.Navigation("Author");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Coupon", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Host")
                        .WithMany("Coupons")
                        .HasForeignKey("HostId")
                        .IsRequired()
                        .HasConstraintName("FK__COUPONS__HOST_ID__52593CB8");

                    b.HasOne("ESCE_SYSTEM.Models.Servicecombo", "Servicecombo")
                        .WithMany("Coupons")
                        .HasForeignKey("ServicecomboId")
                        .IsRequired()
                        .HasConstraintName("FK__COUPONS__SERVICE__534D60F1");

                    b.Navigation("Host");

                    b.Navigation("Servicecombo");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.HostCertificate", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Host")
                        .WithMany("HostCertificates")
                        .HasForeignKey("HostId")
                        .IsRequired()
                        .HasConstraintName("FK__HOST_CERT__HostI__35BCFE0A");

                    b.Navigation("Host");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Message", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK__MESSAGES__SENDER__02084FDA");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.News", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Account")
                        .WithMany("News")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__NEWS__AccountId__123EB7A3");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Notification", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__NOTIFICAT__USER___6EF57B66");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Otp", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "User")
                        .WithMany("Otps")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__OTP__USER_ID__300424B4");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Payment", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__PAYMENTS__BOOKIN__6477ECF3");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Post", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__POSTS__AUTHOR_ID__73BA3083");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Reaction", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "User")
                        .WithMany("Reactions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__REACTIONS__USER___7D439ABD");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.RequestSupport", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Servicecombo", "Combo")
                        .WithMany("RequestSupports")
                        .HasForeignKey("ComboId")
                        .HasConstraintName("FK__REQUEST_S__COMBO__09A971A2");

                    b.HasOne("ESCE_SYSTEM.Models.Account", "User")
                        .WithMany("RequestSupports")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__REQUEST_S__USER___08B54D69");

                    b.Navigation("Combo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Review", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Author")
                        .WithMany("Reviews")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__REVIEWS__AUTHOR___693CA210");

                    b.HasOne("ESCE_SYSTEM.Models.Servicecombo", "Combo")
                        .WithMany("Reviews")
                        .HasForeignKey("ComboId")
                        .IsRequired()
                        .HasConstraintName("FK__REVIEWS__COMBO_I__68487DD7");

                    b.Navigation("Author");

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Service", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Host")
                        .WithMany("Services")
                        .HasForeignKey("HostId")
                        .IsRequired()
                        .HasConstraintName("FK__SERVICE__HOST_ID__403A8C7D");

                    b.Navigation("Host");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Servicecombo", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Host")
                        .WithMany("Servicecombos")
                        .HasForeignKey("HostId")
                        .IsRequired()
                        .HasConstraintName("FK__SERVICECO__HOST___45F365D3");

                    b.Navigation("Host");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.ServicecomboDetail", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Service", "Service")
                        .WithMany("ServicecomboDetails")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK__SERVICECO__SERVI__4AB81AF0");

                    b.HasOne("ESCE_SYSTEM.Models.Servicecombo", "Servicecombo")
                        .WithMany("ServicecomboDetails")
                        .HasForeignKey("ServicecomboId")
                        .IsRequired()
                        .HasConstraintName("FK__SERVICECO__SERVI__49C3F6B7");

                    b.Navigation("Service");

                    b.Navigation("Servicecombo");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.SupportResponse", b =>
                {
                    b.HasOne("ESCE_SYSTEM.Models.Account", "Responder")
                        .WithMany("SupportResponses")
                        .HasForeignKey("ResponderId")
                        .IsRequired()
                        .HasConstraintName("FK__SUPPORT_R__RESPO__0E6E26BF");

                    b.HasOne("ESCE_SYSTEM.Models.RequestSupport", "Support")
                        .WithMany("SupportResponses")
                        .HasForeignKey("SupportId")
                        .IsRequired()
                        .HasConstraintName("FK__SUPPORT_R__SUPPO__0D7A0286");

                    b.Navigation("Responder");

                    b.Navigation("Support");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Account", b =>
                {
                    b.Navigation("AgencieCertificates");

                    b.Navigation("Bookings");

                    b.Navigation("Comments");

                    b.Navigation("Coupons");

                    b.Navigation("HostCertificates");

                    b.Navigation("Messages");

                    b.Navigation("News");

                    b.Navigation("Notifications");

                    b.Navigation("Otps");

                    b.Navigation("Posts");

                    b.Navigation("Reactions");

                    b.Navigation("RequestSupports");

                    b.Navigation("Reviews");

                    b.Navigation("Servicecombos");

                    b.Navigation("Services");

                    b.Navigation("SupportResponses");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Booking", b =>
                {
                    b.Navigation("BookingCoupons");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Coupon", b =>
                {
                    b.Navigation("BookingCoupons");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.RequestSupport", b =>
                {
                    b.Navigation("SupportResponses");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Service", b =>
                {
                    b.Navigation("ServicecomboDetails");
                });

            modelBuilder.Entity("ESCE_SYSTEM.Models.Servicecombo", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Coupons");

                    b.Navigation("RequestSupports");

                    b.Navigation("Reviews");

                    b.Navigation("ServicecomboDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
